<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>digital-audio on A menagerie of technical peccadillos</title>
    <link>https://thetucks.com/tags/digital-audio.html</link>
    <description>Recent content in digital-audio on A menagerie of technical peccadillos</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-uk</language>
    <copyright>Steve Tuck</copyright>
    <lastBuildDate>Mon, 23 Nov 2015 16:57:00 +0000</lastBuildDate>
    <atom:link href="https://thetucks.com/tags/digital-audio/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Differential line receiver for Behringer Ultranet</title>
      <link>https://thetucks.com/post/differential-line-receiver-for-behringer-ultranet.html</link>
      <pubDate>Mon, 23 Nov 2015 16:57:00 +0000</pubDate>
      <guid>https://thetucks.com/post/differential-line-receiver-for-behringer-ultranet.html</guid>
      <description>Prototype receiver circuit based on AM26LV32 chip:&#xA;The MagJack - aÂ Bel Stewart SI-52008-F has datasheet here: http://www.farnell.com/datasheets/1731561.pdf&#xA;The IC cleans up the edges of the incoming signals.&#xA;With some level-shifting and AC coupling, the signals are OK to pass into an SPDIF receiver.</description>
    </item>
    <item>
      <title>XMOS StartKit - write performance of Sandisk memory card</title>
      <link>https://thetucks.com/post/xmos-startkit-write-performance-of-sandisk-memory-card.html</link>
      <pubDate>Mon, 07 Sep 2015 22:26:00 +0000</pubDate>
      <guid>https://thetucks.com/post/xmos-startkit-write-performance-of-sandisk-memory-card.html</guid>
      <description>Here&amp;rsquo;s a graph showing the write performance to a Sandisk Class 10 memory card.&#xA;The reason for the sharp dips in performance, are that the FAT filing system has to go off and allocate a new cluster every N writes. For example 512 byte sectors, 32Kbyte clusters, means a new cluster is needed every 64 writes.&#xA;Another factor on the XMOS board is whether the code is running in &amp;lsquo;debug&amp;rsquo; or &amp;lsquo;release&amp;rsquo; mode.</description>
    </item>
    <item>
      <title>XMOS StartKit - reading and writing to SD card</title>
      <link>https://thetucks.com/post/xmos-startkit-reading-and-writing-to-sd-card.html</link>
      <pubDate>Mon, 31 Aug 2015 23:08:00 +0000</pubDate>
      <guid>https://thetucks.com/post/xmos-startkit-reading-and-writing-to-sd-card.html</guid>
      <description>Being able to read/write information from an SD card is probably the easiest way to get large amounts of non-volatile storage into an embedded project. I&amp;rsquo;m using XMOS StartKit, with the code from here&#xA;The card reader is a part from Wurth Elektronik, Farnell / CPC part number CN18143 available here.&#xA;The data and clock lines have 120 ohm series resistors, as this can help to absorb transmission-line reflections on the connecting wires (even though they are fairly short).</description>
    </item>
    <item>
      <title>Rigol DS1054Z digital storage scope - decoding I2S signals</title>
      <link>https://thetucks.com/post/rigol-ds1054z-digital-storage-scope-decoding-i2s-signals.html</link>
      <pubDate>Mon, 24 Aug 2015 10:58:00 +0000</pubDate>
      <guid>https://thetucks.com/post/rigol-ds1054z-digital-storage-scope-decoding-i2s-signals.html</guid>
      <description>I recently got one of these great little digital scopes. It has a few serial bus decoding packages (on a try-before-buy basis). You get 36 hours to play with them. Unfortunately they don&amp;rsquo;t include I2S bus decoding. I2S is a bus standard commonly used for transferring digital audio around, for example between ADCs and DACs.&#xA;No matter! You can capture and export full-resolution traces of signals via a USB memory stick.</description>
    </item>
  </channel>
</rss>
